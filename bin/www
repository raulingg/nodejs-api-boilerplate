#!/usr/bin/env node
/* eslint-disable no-console */
const http = require('http');
const { createTerminus } = require('@godaddy/terminus');
const app = require('../app');
const { errorHandler } = require('../utils');

const server = http.createServer(app);
const port = process.env.PORT || 3000;

createTerminus(server, {
  signals: ['SIGTERM', 'SIGINT'],
});

console.log(`server running at http://localhost:${port}`);
server.listen(port);

process.on('unhandledRejection', (err) => {
  // since we already have fallback handler for unhandled errors (see below),
  // let throw and let him handle that
  throw err;
});

process.on('uncaughtException', (err) => {
  const isOperational = errorHandler.handleError(err);

  if (!isOperational) process.emit('SIGINT');
});
